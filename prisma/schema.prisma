generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rol {
  ADMINISTRADOR
  EMPLEADO
}

enum Estado {
  PENDIENTE
  EN_PROCESO
  COMPLETADO
}

enum EstadoMedicamento {
  DISPONIBLE
  NO_DISPONIBLE
}

enum EstadoMedicamentoExpirado {
  PROXIMO_A_EXPIRAR
  EXPIRADO
  DISPONIBLE
}


model categoriamedicamentos {
  catmed_pk    Int        @id(map: "categoriamedicamentos_pk") @default(autoincrement())
  variante_fk  Int
  categoria_fk Int
  categoria   categoria @relation(fields: [categoria_fk], references: [categoria_pk], onDelete: NoAction, onUpdate: NoAction, map: "categoriamedicamentos_categoria_fk")
  variante     Variante   @relation(fields: [variante_fk], references: [variante_pk], onDelete: NoAction, onUpdate: NoAction, map: "categoriamedicamentos_medicamentos_fk")
}

model categoria {
  categoria_pk          Int                     @id(map: "categoria_pk") @default(autoincrement())
  descripcion           String                  @db.VarChar(50)
  categoriamedicamentos categoriamedicamentos[]
  medicamentos medicamentos[]
}

model cliente {
  cliente_pk     Int      @id(map: "cliente_pk") @default(autoincrement())
  nombrecompleto String   @db.VarChar(50)
  telefono       String   @db.VarChar(10)
  usuario_fk     Int
  usuario        usuario  @relation(fields: [usuario_fk], references: [usuario_pk], onDelete: NoAction, onUpdate: NoAction, map: "cliente_usuario_fk")
  ventas         ventas[]
}

model detallesventa {
  detallesventa_pk Int      @id(map: "detallesventa_pk") @default(autoincrement())
  cantidad         Int
  ventas_fk        Int
  variante_fk      Int
  variante         Variante @relation(fields: [variante_fk], references: [variante_pk], onDelete: NoAction, onUpdate: NoAction, map: "detallesventa_medicamentos_fk")
  ventas           ventas   @relation(fields: [ventas_fk], references: [ventas_pk], onDelete: NoAction, onUpdate: NoAction, map: "detallesventa_ventas_fk")
}

model distribuidor {
  distribuidor_pk Int               @id(map: "distribuidor_pk") @default(autoincrement())
  nombrecompleto  String            @db.VarChar(50)
  telefono        String            @db.VarChar(10)
  empresa_fk      Int
  detallespedidos detallespedidos[]
  empresa         empresa           @relation(fields: [empresa_fk], references: [empresa_pk], onDelete: NoAction, onUpdate: NoAction, map: "distribuidor_empresa_fk")
  pedidos         pedidos[]
}

model empresa {
  empresa_pk   Int            @id(map: "empresa_pk") @default(autoincrement())
  descripcion  String         @db.VarChar(50)
  distribuidor distribuidor[]
}

model empleado {
  empleado_pk    Int       @id(map: "empleado_pk") @default(autoincrement())
  nombrecompleto String    @db.VarChar(20)
  usuario_fk     Int
  pedidos        pedidos[]
  ventas         ventas[]
}

model FormaFarmaceutica {
  formaFarmaceutica_pk Int        @id @default(autoincrement())
  nombre               String     @unique
  variantes            Variante[]
}

model Presentacion {
  presentacion_pk Int        @id @default(autoincrement())
  nombre          String     @unique
  variantes       Variante[]
}

model AccionTerapeutica {
  accionTerapeutica_pk Int            @id @default(autoincrement())
  nombre               String         @unique
  medicamentos         medicamentos[]
}

model medicamentos {
  medicamento_pk       Int               @id(map: "medicamentos_pk") @default(autoincrement())
  imagen               String?
  codigoBarra          String?
  nombre               String
  descripcion          String?
  accionTerapeutica_pk Int
  categoria_fk         Int
  categoria            categoria        @relation(fields: [categoria_fk], references: [categoria_pk])
  accionTerapeutica    AccionTerapeutica @relation(fields: [accionTerapeutica_pk], references: [accionTerapeutica_pk])
  variantes            Variante[]
  fechaCreacion       DateTime?         @db.Date
  fechaModificacion   DateTime?         @db.Date
}

model Variante {
  variante_pk          Int               @id @default(autoincrement())
  EstadoMedicamento    EstadoMedicamento
  EstadoMedicamentoExpirado EstadoMedicamentoExpirado
  medicamento_fk       Int
  medicamento          medicamentos      @relation(fields: [medicamento_fk], references: [medicamento_pk])
  accionTerapeutica_fk Int
  formaFarmaceutica    FormaFarmaceutica @relation(fields: [accionTerapeutica_fk], references: [formaFarmaceutica_pk])
  concentracion        String
  presentacion_fk      Int
  presentacion         Presentacion      @relation(fields: [presentacion_fk], references: [presentacion_pk])
  cantidad             Int
  precioVenta          Decimal           @default(0.00)
  stock                Int               @default(0)
  detallespedidos      detallespedidos[]
  detallesventa        detallesventa[]
  categoriamedicamentos categoriamedicamentos[] @relation(map: "categoriamedicamentos_medicamentos_fk")
  fehcaexpiracion     DateTime?         @db.Date
  fechaCreacion       DateTime?         @db.Date
  fechaModificacion   DateTime?         @db.Date
}


model usuario {
  usuario_pk    Int       @id(map: "usuario_pk") @default(autoincrement())
  fechacreacion DateTime  @db.Date
  correo        String    @db.VarChar(30)
  contrase_a    String    @db.VarChar(20)
  cliente       cliente[]
  rol  Rol
}

model ventas {
  ventas_pk     Int             @id(map: "ventas_pk") @default(autoincrement())
  fechaventa    DateTime        @db.Date
  empleado_fk   Int
  cliente_fk    Int
  detallesventa detallesventa[]
  cliente       cliente         @relation(fields: [cliente_fk], references: [cliente_pk], onDelete: NoAction, onUpdate: NoAction, map: "ventas_cliente_fk")
  empleado      empleado        @relation(fields: [empleado_fk], references: [empleado_pk], onDelete: NoAction, onUpdate: NoAction, map: "ventas_empleado_fk")
  estado        Estado
}

model pedidos {
  pedidos_pk      Int               @id(map: "pedidos_pk") @default(autoincrement())
  fechaPedido     DateTime          @db.Date
  estado          Estado
  fechaEntrega    DateTime?         @db.Date
  empleado_fk     Int
  distribuidor_fk Int
  detallespedidos detallespedidos[]
  distribuidor    distribuidor      @relation(fields: [distribuidor_fk], references: [distribuidor_pk], onDelete: NoAction, onUpdate: NoAction, map: "distribuidormedicamento_distribuidor_fk")
  empleado        empleado          @relation(fields: [empleado_fk], references: [empleado_pk], onDelete: NoAction, onUpdate: NoAction, map: "ventas_empleado_fk")
}

model detallespedidos {
  detallespedidos_pk Int          @id @default(autoincrement())
  fecha_expiracion   DateTime     @db.Date
  cantidad           Int
  variante_fk        Int
  distribuidor_fk    Int
  pedidos_fk         Int
  fechacompra        DateTime?    @db.Date
  estao              String?      @db.VarChar(20)
  precioventa        Float?       @db.Real
  distribuidor       distribuidor @relation(fields: [distribuidor_fk], references: [distribuidor_pk], onDelete: NoAction, onUpdate: NoAction, map: "detallespedidos_distribuidor_fk")
  variantes          Variante     @relation(fields: [variante_fk], references: [variante_pk], onDelete: NoAction, onUpdate: NoAction, map: "detallespedidos_medicamentos_fk")
  pedidos            pedidos      @relation(fields: [pedidos_fk], references: [pedidos_pk], onDelete: NoAction, onUpdate: NoAction, map: "detallespedidos_pedidos_fk")
}
